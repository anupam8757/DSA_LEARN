#include <iostream>
using namespace std;
class node
{
    public:
    int data;
    node *next;
    node(int data)
    {
        this->data=data;
        next=NULL;
    }
};
// insert data at head of node
void insertathead(node* &head,int data)
{
    if(head==NULL)
    {
        head=new node(data);
        
        return;
    }
    node *n = new node(data);
    n->next=head;
    head=n;


}
// prinnt thre liked list
void printLL(node *head)
{
    while(head!=NULL)
    {
        cout<<head->data<<"-> ";
        head=head->next;
    }
    cout<<endl;
}
void insertatMiddle(node* &head,int data,int pos)
{
    if(pos==0)
    {
        insertathead(head,data);
        return ;
    }
    node *temp=head;
    for(int i=1;i<pos-1;i++)
    temp=temp->next;
    node *middle=new node(data);
    middle->next=temp->next;
    temp->next=middle;
}
node* recurivereverseLL(node *head)
{
    if(head==NULL or head->next==NULL)
    return head;
    node *smallhead= recurivereverseLL(head->next);
    head->next->next=head;
    head->next=NULL;
    return smallhead;
}
int main() {
    cout<<"Hello World!";
    node* head=NULL;
    insertathead(head,1);
      insertathead(head,2);
        insertathead(head,3);
          insertathead(head,4);
            insertathead(head,5);
              insertathead(head,6);
              printLL(head);
              insertatMiddle(head,40,6);
              printLL(head);
             node* rev_head=recurivereverseLL(head);
             printLL(rev_head);
              return 0;

}
